#!/bin/bash

bold="$(tput bold)"
tput0="$(tput sgr0)"
red="$(tput setaf 1)"
blue="$(tput setaf 4)"

heldc="$blue"
unheldc="$red"

pattern="beta"  # Default pattern

# Parse command-line options
while getopts ":p:e" opt; do
  case ${opt} in
    p )
      pattern="$OPTARG"
      ;;
    e )
      editscript
      exit 0
      ;;
    \? )
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    : )
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

editscript(){
  local scriptpath script path swp
  scriptpath=$(realpath "$0" 2>/dev/null)
  script="${scriptpath##*/}"
  path="${scriptpath%/*}"
  swp="$path/.${script}.swp"

  [[ ! -e "$swp" ]] && printf "\n\n%s\n\n" "$swp" && (/usr/bin/nano "$scriptpath") && exit
  printf "\n%s is already being edited.\n%s exists; try fg or look in another window.\n" "$scriptpath" "$swp"
}

pause(){ read -rp "$*" < /dev/tty; }

is_held() {
    for held in "${held_packages[@]}"; do
        if [[ "$held" == "$1" ]]; then
            return 0
        fi
    done
    return 1
}

# Update and list upgradeable packages
echo "Updating package lists..."
#sudo apt update

echo "Getting list of currently held packages..."
held_packages=($(apt-mark showhold))

# List all upgradeable packages matching the pattern
echo "Listing upgradeable packages matching pattern '$pattern'..."
matching_packages=$(apt list --upgradable 2>/dev/null | grep -i "$pattern")

if [ -n "$matching_packages" ]; then
  echo "The following packages matching '$pattern' are upgradeable:"
  while IFS= read -r package; do
    package_name=$(echo "$package" | cut -d '/' -f 1)
    if is_held "$package_name"; then
      echo -e "${heldc}${package_name}${tput0} (held)"
    else
      echo -e "${unheldc}${package_name}${tput0} (unheld)"
    fi
  done <<< "$matching_packages"

  echo "${heldc}on ice    ${tput0}â€”    ${unheldc}concern${tput0}"

  pause "Press Enter to continue..."
else
  echo "No packages matching '$pattern' found."
  exit 0
fi

# Iterate through the matching packages and offer options
while IFS= read -r package; do
  package_name=$(echo "$package" | cut -d '/' -f 1)

  while true; do

    if is_held "$package_name"; then
      package_color="$heldc"
    else
      package_color="$unheldc"
    fi

    echo -e "${bold}\nOptions for package '${package_color}${package_name}${tput0}':${tput0}"
    if is_held "$package_name"; then
        echo "1) ${unheldc}Release hold${tput0}"
    else
        echo "1) ${heldc}Mark as hold${tput0}"
    fi
    echo "2) Show package details"
    echo "${bold}3) Skip to next package${tput0} [default]"
    echo "4) Quit"

    read -rp "Choose an option: " choice < /dev/tty
    choice=${choice:-3}

    case $choice in
      1)
        if is_held "$package_name"; then
          sudo apt-mark unhold "$package_name"
          echo "$package_name has been released from hold."
        else
          sudo apt-mark hold "$package_name"
          echo "$package_name has been marked as hold."
        fi
        break
        ;;
      2)
        apt show "$package_name"
        pause "Press Enter to return to the options..."
        ;;
      3)
        break
        ;;
      4)
        echo "Quitting..."
        exit 0
        ;;
      *)
        echo "Invalid option. Please choose 1, 2, 3, or 4."
        ;;
    esac
  done
done <<< "$matching_packages"

echo "All packages matching '$pattern' processed."
